Dump of assembler code for function multiply:
=> 0x0000555555556070 <+0>:     endbr64 
   0x0000555555556074 <+4>:     test   %rdx,%rdx
   0x0000555555556077 <+7>:     mov    %rdx,%r9
   0x000055555555607a <+10>:    push   %r15
   0x000055555555607c <+12>:    setne  %al
   0x000055555555607f <+15>:    test   %rdi,%rdi
   0x0000555555556082 <+18>:    push   %r14
   0x0000555555556084 <+20>:    setne  %dl
   0x0000555555556087 <+23>:    push   %r13
   0x0000555555556089 <+25>:    and    %edx,%eax
   0x000055555555608b <+27>:    push   %r12
   0x000055555555608d <+29>:    test   %rsi,%rsi
   0x0000555555556090 <+32>:    push   %rbp
   0x0000555555556091 <+33>:    setne  %dl
   0x0000555555556094 <+36>:    push   %rbx
   0x0000555555556095 <+37>:    and    %dl,%al
   0x0000555555556097 <+39>:    mov    %al,-0x1(%rsp)
   0x000055555555609b <+43>:    jne    0x5555555560ad <multiply+61>
   0x000055555555609d <+45>:    movzbl -0x1(%rsp),%eax
   0x00005555555560a2 <+50>:    pop    %rbx
   0x00005555555560a3 <+51>:    pop    %rbp
   0x00005555555560a4 <+52>:    pop    %r12
   0x00005555555560a6 <+54>:    pop    %r13
   0x00005555555560a8 <+56>:    pop    %r14
   0x00005555555560aa <+58>:    pop    %r15
   0x00005555555560ac <+60>:    ret    
   0x00005555555560ad <+61>:    mov    %rdi,%rcx
   0x00005555555560b0 <+64>:    mov    %rsi,%r10
   0x00005555555560b3 <+67>:    mov    0x4(%rsi),%edi
   0x00005555555560b6 <+70>:    cmp    (%r9),%edi
   0x00005555555560b9 <+73>:    je     0x5555555560d0 <multiply+96>
   0x00005555555560bb <+75>:    movb   $0x0,-0x1(%rsp)
   0x00005555555560c0 <+80>:    movzbl -0x1(%rsp),%eax
   0x00005555555560c5 <+85>:    pop    %rbx
   0x00005555555560c6 <+86>:    pop    %rbp
   0x00005555555560c7 <+87>:    pop    %r12
   0x00005555555560c9 <+89>:    pop    %r13
   0x00005555555560cb <+91>:    pop    %r14
   0x00005555555560cd <+93>:    pop    %r15
   0x00005555555560cf <+95>:    ret    
   0x00005555555560d0 <+96>:    mov    0x4(%rcx),%r8d
   0x00005555555560d4 <+100>:   mov    0x4(%r9),%ebx
   0x00005555555560d8 <+104>:   cmp    %ebx,%r8d
   0x00005555555560db <+107>:   jne    0x5555555560bb <multiply+75>
   0x00005555555560dd <+109>:   mov    (%rcx),%ebp
   0x00005555555560df <+111>:   cmp    (%rsi),%ebp
   0x00005555555560e1 <+113>:   jne    0x5555555560bb <multiply+75>
   0x00005555555560e3 <+115>:   imul   %r8d,%ebp
   0x00005555555560e7 <+119>:   test   %ebp,%ebp
   0x00005555555560e9 <+121>:   je     0x55555555609d <multiply+45>
   0x00005555555560eb <+123>:   mov    0x8(%rcx),%r13
   0x00005555555560ef <+127>:   xor    %esi,%esi
   0x00005555555560f1 <+129>:   pxor   %xmm2,%xmm2
   0x00005555555560f5 <+133>:   cmp    $0x1,%r8d
   0x00005555555560f9 <+137>:   jne    0x555555556180 <multiply+272>
   0x00005555555560ff <+143>:   mov    %esi,%eax
   0x0000555555556101 <+145>:   xor    %edx,%edx
   0x0000555555556103 <+147>:   div    %r8d
   0x0000555555556106 <+150>:   imul   %edi,%eax
   0x0000555555556109 <+153>:   test   %edi,%edi
   0x000055555555610b <+155>:   je     0x555555556167 <multiply+247>
   0x000055555555610d <+157>:   nopl   (%rax)
   0x0000555555556110 <+160>:   mov    0x8(%r10),%r14
   0x0000555555556114 <+164>:   mov    0x8(%r9),%r12
   0x0000555555556118 <+168>:   lea    (%rdi,%rax,1),%ebx
   0x000055555555611b <+171>:   movapd %xmm2,%xmm1
   0x000055555555611f <+175>:   sub    %eax,%edx
   0x0000555555556121 <+177>:   nopl   0x0(%rax)
   0x0000555555556128 <+184>:   lea    (%rdx,%rax,1),%r11d
   0x000055555555612c <+188>:   mov    %eax,%ecx
   0x000055555555612e <+190>:   add    $0x1,%eax
   0x0000555555556131 <+193>:   movsd  (%r12,%r11,8),%xmm0
   0x0000555555556137 <+199>:   mulsd  (%r14,%rcx,8),%xmm0
   0x000055555555613d <+205>:   addsd  %xmm0,%xmm1
   0x0000555555556141 <+209>:   cmp    %eax,%ebx
   0x0000555555556143 <+211>:   jne    0x555555556128 <multiply+184>
   0x0000555555556145 <+213>:   movsd  %xmm1,0x0(%r13,%rsi,8)
   0x000055555555614c <+220>:   add    $0x1,%rsi
   0x0000555555556150 <+224>:   cmp    %rsi,%rbp
   0x0000555555556153 <+227>:   je     0x55555555609d <multiply+45>
   0x0000555555556159 <+233>:   mov    %esi,%eax
   0x000055555555615b <+235>:   xor    %edx,%edx
   0x000055555555615d <+237>:   div    %r8d
   0x0000555555556160 <+240>:   imul   %edi,%eax
   0x0000555555556163 <+243>:   test   %edi,%edi
   0x0000555555556165 <+245>:   jne    0x555555556110 <multiply+160>
   0x0000555555556167 <+247>:   movapd %xmm2,%xmm1
   0x000055555555616b <+251>:   movsd  %xmm1,0x0(%r13,%rsi,8)
   0x0000555555556172 <+258>:   add    $0x1,%rsi
   0x0000555555556176 <+262>:   cmp    %rsi,%rbp
   0x0000555555556179 <+265>:   jne    0x555555556159 <multiply+233>
   0x000055555555617b <+267>:   jmp    0x55555555609d <multiply+45>
   0x0000555555556180 <+272>:   xor    %r12d,%r12d
   0x0000555555556183 <+275>:   nopl   0x0(%rax,%rax,1)
   0x0000555555556188 <+280>:   mov    %r12d,%eax
   0x000055555555618b <+283>:   xor    %edx,%edx
   0x000055555555618d <+285>:   div    %r8d
   0x0000555555556190 <+288>:   imul   %edi,%eax
   0x0000555555556193 <+291>:   test   %edi,%edi
   0x0000555555556195 <+293>:   je     0x5555555561e3 <multiply+371>
   0x0000555555556197 <+295>:   mov    0x8(%r10),%r14
   0x000055555555619b <+299>:   mov    0x8(%r9),%r11
   0x000055555555619f <+303>:   lea    (%rdi,%rax,1),%esi
   0x00005555555561a2 <+306>:   movapd %xmm2,%xmm1
   0x00005555555561a6 <+310>:   cs nopw 0x0(%rax,%rax,1)
   0x00005555555561b0 <+320>:   mov    %eax,%r15d
   0x00005555555561b3 <+323>:   mov    %edx,%ecx
   0x00005555555561b5 <+325>:   add    $0x1,%eax
   0x00005555555561b8 <+328>:   add    %ebx,%edx
   0x00005555555561ba <+330>:   movsd  (%r14,%r15,8),%xmm0
   0x00005555555561c0 <+336>:   mulsd  (%r11,%rcx,8),%xmm0
   0x00005555555561c6 <+342>:   addsd  %xmm0,%xmm1
   0x00005555555561ca <+346>:   cmp    %eax,%esi
   0x00005555555561cc <+348>:   jne    0x5555555561b0 <multiply+320>
   0x00005555555561ce <+350>:   movsd  %xmm1,0x0(%r13,%r12,8)
   0x00005555555561d5 <+357>:   add    $0x1,%r12
   0x00005555555561d9 <+361>:   cmp    %rbp,%r12
   0x00005555555561dc <+364>:   jne    0x555555556188 <multiply+280>
   0x00005555555561de <+366>:   jmp    0x55555555609d <multiply+45>
   0x00005555555561e3 <+371>:   movapd %xmm2,%xmm1
   0x00005555555561e7 <+375>:   jmp    0x5555555561ce <multiply+350>
End of assembler dump.

